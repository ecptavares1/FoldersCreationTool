unit fct.controller.main;

interface

Uses
  fct.Controller.Interfaces,System.sysUtils;

type
  TFolderClass = class(TInterfacedObject,iFolderInterface)
    private
      FRaiz : String;
    public
    constructor Create;
    destructor Destroy;override;
    class Function New : iFolderInterface;
    function LocalRaiz(Value : String) : iFolderInterface;
    function Exec : iFolderInterface;
  end;

implementation

{ TFolderClass }

constructor TFolderClass.Create;
begin

end;

destructor TFolderClass.Destroy;
begin

  inherited;
end;

function TFolderClass.Exec: iFolderInterface;
begin
  if FRaiz <> '' then
  Begin
    if not DirectoryExists(FRaiz + '\DCU') then
      ForceDirectories(FRaiz + '\DCU');
    if not DirectoryExists(FRaiz + '\EXE') then
      ForceDirectories(FRaiz + '\EXE');
    if not DirectoryExists(FRaiz + '\EXE\DADOS') then
      ForceDirectories(FRaiz + '\EXE\DADOS');
    if not DirecotryExists(FRaiz + '\FORMS') then
      ForceDirectories(FRaiz + '\FORMS');
    if not DirectoryExists(FRaiz + '\IMAGES') then
      ForceDirectories(FRaiz + '\IMAGES');
    if not DirecotryExists(FRaiz + '\PROJETO') then
      ForceDirectories(FRaiz + '\PROJETO');
  End;
end;

function TFolderClass.LocalRaiz(Value: String): iFolderInterface;
begin
  Result := Self;
  FRaiz := Value;
end;

class function TFolderClass.New: iFolderInterface;
begin
    Result := Self.Create;
end;

end.
